OPCODE IS AT OPCODE_ADDRESS
    HOW TO GET OPCODE_ADDRESS:
        MOVE.W (OPCODE_ADDRESS), DN 
PIRNT_DATA:
    PARAMETERS:
        DATA TYPE (1 BYTE BUT PUSH TO STACK AS 1 WORD) 
            + LSB (BINARY)
                00: RRINT .B 
                01: PRINT .W 
                10: PRINT .LONG 
    NOTE: 
        USE D1, D0, A1 
        IF YOU USE THESE REGISTERS BEFORE CALL THIS FUNCTION THEN YOU SHOULD BACK UP THEM FIRST
    AFTER CALL THIS FUNCTION ADD 2 BYTES TO SP 
        FOR EXAMPLE :
            MOVE.W #0, -(SP) 
            JSR PRINT_DATA 
            ADDQ.L #$2, SP 

CHECK_SUPPORT_REGISTER: 
    USE TO CHECK IF THE REGISTER SUPPORTS FOR THIS PROJECT. 
    PARAMETERS:
        1(4(SP)) - A WORD WITH 8 BITS LSB 00[MODE-XXX][REGISTER-YYY]
    IT WILL CALL UNSUPORT_REGISTER IF THE REGISTER DOESN'T SUPPORT 
    YOU SHOULD CHECK VALUE(WORD) IN (RETURN_ADDRESS) TO MAKE SURE THE REGISTER DOESNT SUPPORT IN YOUR OPCODE IMPLEMENT(SEE HOW TO IMPLEMENT OPCODE)
    
    RETURN:
        C_UNSUPPORT_REGISTER IF IT DOESN'T SUPPORT 
        OTHERWISE IT IS CLEAR 
    NOTE: 
        D1, D4, A3, A0, D0 USE FOR THIS FUNCTION, MAKE SURE BACKUP THEM BEFORE CALL THIS FUNCTION 
    
    AFTER DONE THIS FUNCTION REMEMBER TO  ADD 2 TO SP 
        FOR EXAMPLE: 
            MOVE.W #%00111000, -(SP)
            JSR CHECK_SUPPORT_REGISTER 
            ADDQ.L #2, SP 


PRINT_REGISTER: 
    PRINT THE REGISTERS, PRINT IMMMEDIATE VALUE (BYTE WORD LONG), ABSOUTE SHORT, ABSOUTE LONG ... 
    
    PARAMETERS: 
        1 - (4(SP)):
            MOVE A WORD WITH 8 BITS LSB AS 00[MODE=XXX][REGISTER=YYY]
                FOR EXAMPLE: TO PRINT D1, 
                    THE MODE SHOULD BE 000, THE REGISTER IS 001 
                MOVE.W #%00000001, -(SP) 
        2 - (6(SP))(SHOULD PASS TO INCRASE PROGRAM COUNTER LATER ON):
            MOVE A WORD WITH 2 BITS LSB AS 00 FOR BYTE, 01 FOR WORD, 02 FOR LONG 
                FOR EXAMPLE: 
                    IF THE DATA IS A WORD:
                        MOVE.W #$01, -(SP) 
    NOTE: THIS FUNCTION USE D1, D2 ,D0 , A1 TO PRINT AND PROCESS THE DATA, YOU SHOULD BACKUP THESE REGISTER BEFORE CALL THIS FUNCTION 
        AFTER CALL THE FUNCTION YOU SHOULD ADD 4 TO SP 
            FOR EXAMLE: 
                    MOVE.W #%00000001, -(SP) ; MOVE MODE AND REGISTER 
                    MOVE.W #$01, -(SP) ; MOVE SIZE 
                    JSR PRINT_REGISTER 
                    ADDQ.L #$04, SP 

-------------------------------------------------
HOW TO IMPLEMENT AN OPCODE:

FOR EXAMPLE IMPLEMENT ADD OPCODE: 

ADD:
    CHECK IF THE OPCODE MATCH WITH THIS PATTERN 
       IF DONT MATCH: 
        BNE END_A 
        IF MATCH: 
            SEE IF THE OPCODE HAVE [MODE][REGISTER] IN THERE 
            PASS 1 WORD WITH 8 BITS AS [MODE][REGISTER] 
                MOVE.W [MODE][REGISTER] , -(SP)
                JSR CHECK_SUPPORT_REGISTER 
                ADDQ.L #2, SP 
                ; CHECK THE RETURN_ADDRESS TO MAKE SURE WE SUPPORT THE OPCODE 
                MOVE.W (RETURN_ADDRESS), DN 
                CMPI.W #C_UNSUPPORT_REGISTER, D2 
                BEQ FINISH_OPCODE (IMPORTANT)

                ; IMPLEMENT YOUR OPCODE HERE 

                IF YOU ARE DONE WITH THE IMPLEMENT CALL 
                BRA FINISH_OPCODE (IMPORTANT DONT'T CALL RTS) CALL RTS ONLY WHEN THE PATERN DOESN MATCH WITH YOUR IMPLEMENT OPCODE 


END_A:
    RTS 
        